// Generated by CoffeeScript 1.9.2

/*
API wrapper for breweries endpoint

@author Torstein Thune
@copyright Microbrew.it 2015
 */

(function() {
  var Breweries, BreweryMembers, ItemEndpoint,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ItemEndpoint = require('./ItemEndpoint.coffee');

  BreweryMembers = (function(superClass) {
    extend(BreweryMembers, superClass);

    function BreweryMembers() {
      return BreweryMembers.__super__.constructor.apply(this, arguments);
    }

    BreweryMembers.prototype.endpoint = 'breweries';

    BreweryMembers.prototype.get = function(query, callback, token) {
      if (!query.id) {
        return callback(new Error('Please supply a brewery ID for your query'));
      } else {
        query.partial = 'members';
        if (query.username == null) {
          query.username = query.userId;
        }
        if (query.username) {
          query.partial += "/" + query.username;
        }
        delete query.username;
        delete query.userId;
        return BreweryMembers.__super__.get.call(this, query, callback, token);
      }
    };

    BreweryMembers.prototype.post = function(query, callback, token) {
      return callback(new Error('Not implemented'));
    };

    BreweryMembers.prototype.put = function(query, callback, token) {
      return callback(new Error('Not implemented'));
    };

    BreweryMembers.prototype["delete"] = function(query, callback, token) {
      return callback(new Error('Not implemented'));
    };

    return BreweryMembers;

  })(ItemEndpoint);

  Breweries = (function(superClass) {
    extend(Breweries, superClass);

    function Breweries() {
      return Breweries.__super__.constructor.apply(this, arguments);
    }

    Breweries.prototype.endpoint = 'breweries';

    Breweries.prototype.members = new BreweryMembers();

    Breweries.prototype.upload = function() {
      return callback(new Error('Not implemented'));
    };

    return Breweries;

  })(ItemEndpoint);

  module.exports = Breweries;

}).call(this);
